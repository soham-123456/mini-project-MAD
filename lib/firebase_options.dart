// File generated by FlutterFire CLI.
// This file is used to configure Firebase for the project.
// For web platform, you need to manually configure Firebase in your web page.

import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      // Configure Firebase for Web
      // You need to replace these values with your own Firebase Web config values
      return const FirebaseOptions(
        apiKey: "YOUR_API_KEY",
        authDomain: "your-app.firebaseapp.com",
        projectId: "your-app",
        storageBucket: "your-app.appspot.com",
        messagingSenderId: "000000000000",
        appId: "1:000000000000:web:0000000000000000000000",
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        // Configure Firebase for Android
        return const FirebaseOptions(
          apiKey: "YOUR_API_KEY",
          appId: "1:000000000000:android:0000000000000000000000",
          messagingSenderId: "000000000000",
          projectId: "your-app",
          storageBucket: "your-app.appspot.com",
        );
      case TargetPlatform.iOS:
        // Configure Firebase for iOS
        return const FirebaseOptions(
          apiKey: "YOUR_API_KEY",
          appId: "1:000000000000:ios:0000000000000000000000",
          messagingSenderId: "000000000000",
          projectId: "your-app",
          storageBucket: "your-app.appspot.com",
          iosBundleId: "com.example.yourapp",
        );
      case TargetPlatform.macOS:
        // Configure Firebase for macOS
        return const FirebaseOptions(
          apiKey: "YOUR_API_KEY",
          appId: "1:000000000000:ios:0000000000000000000000",
          messagingSenderId: "000000000000",
          projectId: "your-app",
          storageBucket: "your-app.appspot.com",
          iosBundleId: "com.example.yourapp",
        );
      case TargetPlatform.windows:
        // Configure Firebase for Windows if applicable
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        // Configure Firebase for Linux if applicable
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }
} 